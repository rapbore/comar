<?php

/**
 * This is the model base class for the table "user_plan".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserPlan".
 *
 * Columns in table "user_plan" available as properties of the model,
 * followed by relations of table "user_plan" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $plan_id
 * @property integer $local_id
 *
 * @property User $user
 * @property Plan $plan
 * @property Local $local
 */
abstract class BaseUserPlan extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_plan';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserPlan|UserPlans', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('id', 'required'),
			array('id, user_id, plan_id, local_id', 'numerical', 'integerOnly'=>true),
			array('user_id, plan_id, local_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, plan_id, local_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'plan' => array(self::BELONGS_TO, 'Plan', 'plan_id'),
			'local' => array(self::BELONGS_TO, 'Local', 'local_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'plan_id' => null,
			'local_id' => null,
			'user' => null,
			'plan' => null,
			'local' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('plan_id', $this->plan_id);
		$criteria->compare('local_id', $this->local_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}